#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/* Empty Layer Template
layer_name {
    bindings = <
    &none &none &none &none &none                                                 &none &none &none &none &none
    &none &none &none &none &none &none                                     &none &none &none &none &none &none
    &none &none &none &none &none &none                                     &none &none &none &none &none &none
    &none &none &none &none &none &none                                     &none &none &none &none &none &none
    &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none
    &none &none &none &none &none       &none &none &none &none &none &none &none &none &none &none &none
    >;
};
*/
// Glove80 key positions index for positional hold-tap
// - https://discord.com/channels/877392805654306816/937645688244826154/1066713913351221248
// - https://media.discordapp.net/attachments/937645688244826154/1066713913133121556/image.png
//
// |------------------------|------------------------|
// | LEFT_HAND_KEYS         |        RIGHT_HAND_KEYS |
// |                        |                        |
// |  0  1  2  3  4         |          5  6  7  8  9 |
// | 10 11 12 13 14 15      |      16 17 18 19 20 21 |
// | 22 23 24 25 26 27      |      28 29 30 31 32 33 |
// | 34 35 36 37 38 39      |      40 41 42 43 44 45 |
// | 46 47 48 49 50 51      |      58 59 60 61 62 63 |
// | 64 65 66 67 68         |         75 76 77 78 79 |
// |                69 52   |   57 74                |
// |                 70 53  |  56 73                 |
// |                  71 54 | 55 72                  |
// |------------------------|------------------------|
//

#define LEFT_HAND_KEYS      \
      0  1  2  3  4         \
      10 11 12 13 14 15      \
      22 23 24 25 26 27      \
      34 35 36 37 38 39      \
      46 47 48 49 50 51      \
      64 65 66 67 68
#define THUMB_KEYS          \
                    69 52       57 74                \
                      70 53     56 73                 \
                      71 54   55 72
#define RIGHT_HAND_KEYS     \
                                      5  6  7  8  9 \
                                  16 17 18 19 20 21 \
                                  28 29 30 31 32 33 \
                                  40 41 42 43 44 45 \
                                  58 59 60 61 62 63 \
                                    75 76 77 78 79
#define LEADER LC(LG(LALT))

// layers

#define LBASE 0
#define LRHS 1
#define LLHS 2
#define LNUM 3
#define MAGIC 4
#define FACTORY_TEST 5

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        mt0: mod_tap_0 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&kp>;
        };

        lhs_tap: left_hand_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&mo>, <&kp>;
        };

        lhm: left_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        };

        lhm_slow: left_homerow_mod_slow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
        };

        rhm: right_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        };

        rhm_slow: right_homerow_mod_slow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp F1      &kp F2           &kp F3            &kp F4        &kp F5                                                                                                             &kp F6        &kp F7        &kp F8            &kp F9                    &kp F10
&kp EQUAL   &kp N1           &kp N2            &kp N3        &kp N4        &kp N5                                                                                       &kp N6  &kp N7        &kp N8        &kp N9            &kp N0                    &kp MINUS
&kp TAB     &kp Q            &kp W             &kp E         &kp R         &kp T                                                                                        &kp Y   &kp U         &kp I         &kp O             &kp P                     &kp BSLH
&kp ESC     &lhm_slow LEFT_GUI A  &lhm_slow LEFT_META S  &lhm LCTRL D  &lhm LSHFT F  &kp G                                                                                        &kp H   &rhm RSHFT J  &rhm RCTRL K  &rhm_slow RIGHT_ALT L  &rhm_slow RIGHT_GUI SEMICOLON  &kp SQT
&kp GRAVE   &kr Z            &kp X             &kp C         &kp V         &kp B   &kp LEFT_SHIFT  &none      &none           &none         &none     &caps_word        &kp N   &kp M         &kp COMMA     &kp PERIOD        &kp SLASH                 &kp PG_UP
&magic 3 0  &kp HOME         &kp END           &kp LEFT      &kp RIGHT             &mo 1           &kp ENTER  &kp LEFT_GUI    &kp LEFT_ALT  &kp BSPC  &lhs_tap 2 SPACE          &kp DOWN      &kp UP        &kp LBKT          &kp RBKT                  &kp PG_DN
            >;
        };

        right_hand_layer {
            bindings = <
&none  &none  &none  &none      &none                                                                      &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none      &kp PAUSE_BREAK
&none  &none  &none  &none      &none  &none                                                    &none      &none       &none         &none         &none      &none
&none  &none  &none  &none      &none  &none                                                    &kp CARET  &kp EQUAL   &kp STAR      &kp PLUS      &kp MINUS  &none
&none  &none  &none  &kp LCTRL  &none  &none                                                    &kp AMPS   &kp UNDER   &kp DQT       &kp SQT       &kp PIPE   &none
&none  &none  &none  &none      &none  &none  &trans  &trans  &trans    &trans  &trans  &trans  &none      &kp COLON   &none         &none         &kp QMARK  &none
&none  &none  &none  &none      &none         &trans  &trans  &trans    &trans  &trans  &trans             &none       &none         &none         &none      &none
            >;
        };

        left_hand_layer {
            bindings = <
&none      &none     &none     &none     &none                                                                         &none  &none      &none  &none  &none
&none      &none     &none     &none     &none     &none                                                        &none  &none  &none      &none  &none  &none
&none      &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                                                    &none  &none  &none      &none  &none  &none
&kp GRAVE  &kp LBRC  &kp LPAR  &kp RPAR  &kp RBRC  &kp TILDE                                                    &none  &none  &kp RCTRL  &none  &none  &none
&none      &kp LBKT  &kp LT    &kp GT    &kp RBKT  &kp BSLH   &trans  &trans  &trans    &trans  &trans  &trans  &none  &none  &none      &none  &none  &none
&none      &none     &none     &none     &none                &trans  &trans  &trans    &trans  &trans  &trans         &none  &none      &none  &none  &none
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };
    };
};
